-
  To test the Mexican Electronic Invoice
-
  !python {model: account.invoice}: |
    import netsvc
    import tools, os, base64
    ir_model_data = self.pool.get('ir.model.data')
    acc_jour_obj = self.pool.get('account.journal')
    ir_attachment_mx_obj = self.pool.get('ir.attachment.facturae.mx')
    wf_service = netsvc.LocalService("workflow")
    journal_ids = acc_jour_obj.search(cr, uid, [], context=context)
    i = 0
    for journal_data in acc_jour_obj.browse(cr, uid, journal_ids, context=context):
        if journal_data.sequence_id and journal_data.sequence_id.approval_id and journal_data.sequence_id.approval_id.id:
            all_ok = True
            pac_type = journal_data.sequence_id.approval_id.type
            ir_model_id = ir_model_data.search(cr, uid, [('res_id','=',journal_data.id),('model','=','account.journal')])
            if ir_model_id:
                module_journal =  ir_model_data.browse(cr, uid, ir_model_id[0], context=context).module.encode('UTF8')
                name_journal = ir_model_data.browse(cr, uid, ir_model_id[0], context=context).name.encode('UTF8')
                journal_xml_id = '%s.%s' % (module_journal,name_journal)
                xml_id_invoice = 'ai_pac_facturae_%s_%s'% (pac_type,i)
                data_ids = ir_model_data.search(cr, uid, [('model', '=', self._name), ('name', 'like', xml_id_invoice)])
                if not data_ids:
                    try:
                        log("To test the Mexican Electronic Invoice %s" % (pac_type))
                        #################################################################################################
                        #     1 Duplicate invoice of l10n_mx_facturae_base to xx                                       #
                        #################################################################################################
                        log("1 Duplicate invoice of l10n_mx_facturae_base for %s" % (xml_id_invoice)) 
                        invoice_id = self.copy(cr, uid, ref('l10n_mx_facturae_base.ai_pac_facturae_0'), context=context)
                        self.write(cr, uid, [invoice_id], {'journal_id':ref(journal_xml_id)},context=context)
                        res_id = ir_model_data.create(cr, uid, {
                                        'name': xml_id_invoice,
                                        'model': self._name,
                                        'res_id': invoice_id,
                                        'module': 'l10n_mx_cfdi_test',
                                    })
                        #################################################################################################
                        #                                Browse of invoice                                              #
                        #################################################################################################
                        
                        invoice_data = self.browse(cr, uid, invoice_id, context=context)
                        
                        #################################################################################################
                        #                       2 I check that Journal is                                               #
                        #################################################################################################
                        log("2 I check that Journal is %s" % (journal_xml_id))
                        assert invoice_data.journal_id.id==ref(journal_xml_id), 'This invoice has not assigned this %s' % (journal_xml_id)
                        
                        #################################################################################################
                        #                       3 I check that Initially customer invoice state is "Draft"              #
                        #################################################################################################
                        log("3 I check that Initially customer invoice %s state is Draft"% (xml_id_invoice))
                        assert invoice_data.state == 'draft', 'This invoice has not state in draft'
                        
                        #################################################################################################
                        #                       4 I open invoice by clicking on Create button                           #
                        #################################################################################################
                        log("4 I open invoice by clicking on Create button %s" % (xml_id_invoice))
                        wf_service.trg_validate(uid, 'account.invoice', ref(xml_id_invoice), 'invoice_open', cr)
                        
                        #################################################################################################
                        #                       5 I check that the invoice state is "Open"                              #
                        #################################################################################################
                        log("5 I check that the invoice %s state is Open"% (xml_id_invoice))
                        assert invoice_data.state == 'open', 'This invoice has not state in open'
                        
                        #################################################################################################
                        #    6 I check that the state in l10n_mx attachment facturae cfdi_pac_finkok is "Confirmed"     #
                        #################################################################################################
                        log("6 I check that the state in l10n_mx attachment facturae %s is Confirmed"% (xml_id_invoice))
                        cfdi_pac_finkok_ids = ir_attachment_mx_obj.search(cr, uid, [('id_source', '=', ref(xml_id_invoice) ),('model_source','=','account.invoice'), ('state', '<>', 'cancel')], limit=1)
                        cfdi_pac_finkok_id = cfdi_pac_finkok_ids and cfdi_pac_finkok_ids[0] or False
                        state = 'no attach file'
                        if cfdi_pac_finkok_id:
                            cfdi_pac_finkok = ir_attachment_mx_obj.browse(cr, uid, [cfdi_pac_finkok_id])[0]
                            state = cfdi_pac_finkok.state
                            ir_attach_facturae_mx = cfdi_pac_finkok.file_input and cfdi_pac_finkok.file_input or False
                            fdata = ir_attach_facturae_mx and ir_attach_facturae_mx.db_datas or False
                            if fdata:
                                if tools.config['test_report_directory']:
                                    open(os.path.join(tools.config['test_report_directory'], 'l10n_mx_cfdi_test' + '_' + \
                                      xml_id_invoice + '_' + 'confirmed' + '-' + ir_attach_facturae_mx.datas_fname)\
                                      , 'wb+').write( base64.decodestring( fdata ) )
                            else:
                                state = 'no data in attach file'
                        assert state=='confirmed', 'No confirmed state l10n_mx attachment facturae %s' % (pac_type)
                        
                        all_ok = False
                    except Exception, e:
                        assert all_ok, 'ALGO FALLO'
                        pass
