-
  To test the Mexican Electronic payroll
-
  !python {model: hr.payslip}: |
    from l10n_mx_cfdi_test import timer as ti
    import netsvc
    import tools, os, base64
    import logging
    from tools.misc import mute_logger
    ir_model_data = self.pool.get('ir.model.data')
    acc_jour_obj = self.pool.get('account.journal')
    ir_attachment_mx_obj = self.pool.get('ir.attachment.facturae.mx')
    wf_service = netsvc.LocalService("workflow")
    journal_ids = acc_jour_obj.search(cr, uid, [], context=context)
    # TODO: Get logger variable
    _logger = logging.getLogger("openerp.tools.yaml_import")
    res_id = False
    time_total = 0
    for journal_data in acc_jour_obj.browse(cr, uid, journal_ids, context=context):
        if (journal_data.sequence_id and journal_data.sequence_id.approval_id and journal_data.sequence_id.approval_id.id) and journal_data.type in ('purchase'):
            for type_test_cancel in ['cancel_from_payroll','cancel_from_attachment_facturae_mx']:
                time_total = 0
                all_ok = False
                pac_type = journal_data.sequence_id.approval_id.type
                ir_model_id = ir_model_data.search(cr, uid, [('res_id','=',journal_data.id),('model','=','account.journal')])
                if ir_model_id:
                    module_journal =  ir_model_data.browse(cr, uid, ir_model_id[0], context=context).module.encode('UTF8')
                    name_journal = ir_model_data.browse(cr, uid, ir_model_id[0], context=context).name.encode('UTF8')
                    journal_xml_id = '%s.%s' % (module_journal,name_journal)
                    try:
                        log("To test the Mexican Electronic Payroll %s %s" % (pac_type,type_test_cancel))
                        #################################################################################################
                        #     1 Duplicate payroll of l10n_mx_payroll_base to xx                                        #
                        #################################################################################################
                        log("1 Duplicate payroll of l10n_mx_payroll_base")
                        with ti.Timer() as t:
                            payroll_id = self.copy(cr, uid, ref('l10n_mx_payroll_base.hr_payslip_mlc_cfdi0'), context=context)
                            self.write(cr, uid, [payroll_id], {'journal_id':ref(journal_xml_id)},context=context)
                            xml_id_payroll = 'hr_payslip_pac_%s_%s'% (pac_type,payroll_id)
                            data_ids = ir_model_data.search(cr, uid, [('model', '=', self._name), ('name', 'like', xml_id_payroll)])
                            if not data_ids:
                                res_id = ir_model_data.create(cr, uid, {
                                                'name': xml_id_payroll,
                                                'model': self._name,
                                                'res_id': payroll_id,
                                                'module': 'l10n_mx_cfdi_test',
                                            })
                        time_tmp = t.secs
                        time_total += time_tmp
                        log("*** Time duplicate payroll: %s s" % time_tmp)
                        #################################################################################################
                        #                                Browse of payroll                                              #
                        #################################################################################################
                        payroll_data = self.browse(cr, uid, payroll_id, context=context)
                        
                        #################################################################################################
                        #                       2 I check that Journal is                                               #
                        #################################################################################################
                        log("2 I check that Journal is %s" % (journal_xml_id))
                        assert payroll_data.journal_id.id==ref(journal_xml_id), 'This payroll has not assigned this %s' % (journal_xml_id)
                        
                        #################################################################################################
                        #                       3 I check that Initially customer payroll state is "Draft"              #
                        #################################################################################################
                        log("3 I check that Initially customer payroll %s state is Draft"% (xml_id_payroll))
                        assert payroll_data.state == 'draft', 'This payroll has not state in draft'
                        
                        #################################################################################################
                        #                       4 I confirm payroll by clicking on Create button                           #
                        #################################################################################################
                        log("4 I open payroll by clicking on Validate button %s" % (xml_id_payroll))
                        with ti.Timer() as t:
                            self.hr_verify_sheet(cr, uid , [ref(xml_id_payroll)] ,context=context)
                        time_tmp = t.secs
                        time_total += time_tmp
                        log("*** Open payroll: %s s" % time_tmp)
                        #################################################################################################
                        #    5 I check that the state in l10n_mx attachment payroll is "Confirmed"     #
                        #################################################################################################
                        log("5 I check that the state in l10n_mx attachment payroll %s is Confirmed"% (xml_id_payroll))
                        cfdi_attachment_ids = ir_attachment_mx_obj.search(cr, uid, [('id_source', '=', ref(xml_id_payroll) ),('model_source','=','hr.payslip'), ('state', '<>', 'cancel')], limit=1)
                        cfdi_attachment_id = cfdi_attachment_ids and cfdi_attachment_ids[0] or False
                        state = 'no attach file'
                        if cfdi_attachment_id:
                            cfdi_attachment_data = ir_attachment_mx_obj.browse(cr, uid, cfdi_attachment_id)
                            state = cfdi_attachment_data.state
                            ir_attach_payroll_mx = cfdi_attachment_data.file_input and cfdi_attachment_data.file_input or False
                            fdata = ir_attach_payroll_mx and ir_attach_payroll_mx.db_datas or False
                            if fdata:
                                if tools.config['test_report_directory']:
                                    open(os.path.join(tools.config['test_report_directory'], 'l10n_mx_cfdi_test' + '_' + \
                                      xml_id_payroll + '_' + 'confirmed' + '-' + ir_attach_payroll_mx.datas_fname)\
                                      , 'wb+').write( base64.decodestring( fdata ) )
                            else:
                                state = 'no data in attach file'
                        assert state=='confirmed', 'No confirmed state l10n_mx attachment payroll %s' % (pac_type)
                        
                        #################################################################################################
                        #   6 I sign l10n_mx attachment payroll cfdi_pac_finkok by clicking on sign button upload pac  #
                        #################################################################################################
                        log("6 I sign l10n_mx attachment payroll %s by clicking on sign button upload %s"% (xml_id_payroll,pac_type))
                        with ti.Timer() as t:
                            cfdi_attachment_data = ir_attachment_mx_obj.browse(cr, uid, cfdi_attachment_id, context=context)
                            ir_attachment_mx_obj.signal_sign(cr, uid, cfdi_attachment_ids, context=context)
                        time_tmp = t.secs
                        time_total += time_tmp
                        log("*** Signal payroll: %s s" % time_tmp)
                        #################################################################################################
                        #    7 I check that the state in l10n_mx attachment payroll cfdi_attachment_data is "Done"   #
                        #################################################################################################
                        log("7 I check that the state in l10n_mx attachment payroll %s is Done"% (xml_id_payroll))
                        cfdi_attachment_data = ir_attachment_mx_obj.browse(cr, uid, cfdi_attachment_id, context=context)
                        ir_attach_payroll_mx = cfdi_attachment_data.file_xml_sign and cfdi_attachment_data.file_xml_sign or False
                        fdata = ir_attach_payroll_mx and ir_attach_payroll_mx.db_datas or False
                        if fdata:
                            state = cfdi_attachment_data.state
                            if tools.config['test_report_directory']:
                                open(os.path.join(tools.config['test_report_directory'], 'l10n_mx_cfdi_test' + '_' + \
                                  xml_id_payroll + '_' + 'signed' + '-' + ir_attach_payroll_mx.datas_fname)\
                                  , 'wb+').write( base64.decodestring( fdata ) )
                        else:
                            state = 'no data in attach file'
                        assert state=='done', 'No signed state l10n_mx attachment payroll %s' % (pac_type)
                        
                        ################################################################################################################
                        #   8 I generate a printable l10n_mx attachment payroll cfdi_attachment_data by clicking on printable button  #
                        ################################################################################################################
                        log("8 I generate a printable l10n_mx attachment payroll %s by clicking on printable button"% (xml_id_payroll))
                        with ti.Timer() as t:
                            cfdi_attachment_data = ir_attachment_mx_obj.browse(cr, uid, cfdi_attachment_id, context=context)
                            ir_attachment_mx_obj.signal_printable(cr, uid , cfdi_attachment_ids ,context=context)
                        time_tmp = t.secs
                        time_total += time_tmp
                        log("*** Printable payroll: %s s" % time_tmp)
                        #######################################################################################################
                        #   9 I check that the file pdf in l10n_mx attachment payroll cfdi_attachment_data was created      #
                        #######################################################################################################
                        log("9 I check that the file pdf in l10n_mx attachment payroll %s was created"% (xml_id_payroll))
                        cfdi_attachment_data = ir_attachment_mx_obj.browse(cr, uid, cfdi_attachment_id, context=context)
                        ir_attach_payroll_mx = cfdi_attachment_data.file_pdf and cfdi_attachment_data.file_pdf or False
                        fdata = ir_attach_payroll_mx and ir_attach_payroll_mx.db_datas or False
                        if fdata:
                            if tools.config['test_report_directory']:
                                open(os.path.join(tools.config['test_report_directory'], 'l10n_mx_cfdi_test' + '_' + \
                                  xml_id_payroll + '_' + 'printable' + '-' + ir_attach_payroll_mx.datas_fname)\
                                  , 'wb+').write( base64.decodestring( fdata ) )
                        assert ir_attach_payroll_mx, 'No printable state l10n_mx attachment payroll %s'% (xml_id_payroll)
                        
                        if type_test_cancel == 'cancel_from_payroll':
                            #############################################################################################################
                            #   11 I cancel from payroll by clicking on cancel button                                                   #
                            #############################################################################################################
                            log("11 I cancel from payroll %s by clicking on cancel button"% (xml_id_payroll))
                            with ti.Timer() as t:
                                self.cancel_sheet(cr, uid, [ref(xml_id_payroll)], context=context)
                            time_tmp = t.secs
                            time_total += time_tmp
                            log("*** Cancel payroll from model source: %s s" % time_tmp)
                        if type_test_cancel == 'cancel_from_attachment_facturae_mx':
                            ########################################################################################################
                            #   11 I cancel from attachment                                                                        #
                            ########################################################################################################
                            log("11 I cancel from l10n_mx attachment payroll %s by clicking on cancel button"% (xml_id_payroll))
                            with ti.Timer() as t:
                                ir_attachment_mx_obj.signal_cancel(cr, uid , cfdi_attachment_ids ,context=context)
                            time_tmp = t.secs
                            time_total += time_tmp
                            log("*** Cancel payroll from attachment: %s s" % time_tmp)
                        #######################################################################################################
                        #    12 I check that the state in l10n_mx attachment and payroll cfdi_attachment_data are "Cancel"   #
                        #######################################################################################################
                        log("12 I check that the state in l10n_mx attachment and payroll %s are Cancel"% (xml_id_payroll))
                        cfdi_attachment_data = ir_attachment_mx_obj.browse(cr, uid, cfdi_attachment_id, context=context)
                        state = cfdi_attachment_data.state
                        assert state=='cancel', 'No cancel state l10n_mx attachment' % (pac_type)
                        payroll_data = self.browse(cr, uid, payroll_id, context=context)
                        state = payroll_data.state
                        assert state=='cancel', 'No cancel state payroll %s' % (xml_id_payroll)
                        
                        #######################
                        #   end all test      #
                        #######################
                        all_ok = True
                    except Exception, e:
                        _logger.error(tools.ustr(e))
                        assert all_ok == False, 'Something failure'
                        pass
                    finally:
                        if res_id:
                            # This is because OpenERP module make an inspection of xml ids if not exist this one. try delete it.
                            ir_model_data.unlink(cr, uid, [res_id],context=context)
                _logger.info( "Process complete in : %s s" % (time_total))
