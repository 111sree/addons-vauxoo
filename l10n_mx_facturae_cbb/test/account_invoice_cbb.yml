-
  To test the Mexican Electronic Invoice CBB
-
  I create a cbb customer invoice
-
  !record {model: account.invoice, id: account_invoice_cbb0, view: account.invoice_form}:
    payment_term: account.account_payment_term_advance
    journal_id: l10n_mx_cbb_journal_0
    partner_id: l10n_mx_partner_address.res_partner_address_vauxoo_1
    reference_type: none
    name: 'Test cbb Customer Invoice'
    invoice_line:
      - product_id: product.product_product_5
        quantity: 10.0
-
  I rewrite the journal field (BUG I need overwrite two times this field for done! only in test yaml)
-
  !record {model: account.invoice, id: account_invoice_cbb0, view: account.invoice_form}:
    journal_id: l10n_mx_cbb_journal_0
-
  I check that Journal is cbb
-
  !assert {model: account.invoice, id: account_invoice_cbb0}:
    - journal_id.id == ref('l10n_mx_cbb_journal_0')
-
  I check that Initially customer invoice state is "Draft"
-
  !assert {model: account.invoice, id: account_invoice_cbb0}:
    - state == 'draft'
-
  I open invoice by clicking on Create button
-
  !workflow {model: account.invoice, action: invoice_open, ref: account_invoice_cbb0}
-
  I check that the invoice state is "Open"
-
  !assert {model: account.invoice, id: account_invoice_cbb0}:
    - state == 'open'
-
  I confirm l10n_mx attachment facturae cbb by clicking on confirm button
-
  !python {model: ir.attachment.facturae.mx}: |
    import netsvc
    wf_service = netsvc.LocalService("workflow")
    cbb_ids = self.search(cr, uid, [('invoice_id', '=', ref("account_invoice_cbb0") ), ('state', '<>', 'cancel')], limit=1)
    cbb_id = cbb_ids and cbb_ids[0] or False
    if cbb_id:
        wf_service.trg_validate(uid, 'ir.attachment.facturae.mx', cbb_id, 'action_confirm', cr)
-
  I sign l10n_mx attachment facturae cbb by clicking on sign button
-
  !python {model: ir.attachment.facturae.mx}: |
    import netsvc
    wf_service = netsvc.LocalService("workflow")
    cbb_ids = self.search(cr, uid, [('invoice_id', '=', ref("account_invoice_cbb0") ), ('state', '<>', 'cancel')], limit=1)
    cbb_id = cbb_ids and cbb_ids[0] or False
    if cbb_id:
        wf_service.trg_validate(uid, 'ir.attachment.facturae.mx', cbb_id, 'action_sign', cr)
-
  I check that the state in l10n_mx attachment facturae cbb is "Signed"
-
  !python {model: ir.attachment.facturae.mx}: |
    cbb_ids = self.search(cr, uid, [('invoice_id', '=', ref("account_invoice_cbb0") ), ('state', '<>', 'cancel')], limit=1)
    cbb_id = cbb_ids and cbb_ids[0] or False
    state = None
    if cbb_id:
        cbb = self.browse(cr, uid, [cbb_id])[0]
        state = cbb.state
    assert state=='signed', 'No signed state l10n_mx attachment facturae cbb'
-
  I generate a printable l10n_mx attachment facturae cbb by clicking on printable button
-
  !python {model: ir.attachment.facturae.mx}: |
    import netsvc
    wf_service = netsvc.LocalService("workflow")
    cbb_ids = self.search(cr, uid, [('invoice_id', '=', ref("account_invoice_cbb0") ), ('state', '<>', 'cancel')], limit=1)
    cbb_id = cbb_ids and cbb_ids[0] or False
    if cbb_id:
        wf_service.trg_validate(uid, 'ir.attachment.facturae.mx', cbb_id, 'action_printable', cr)
-
  I check that the state in l10n_mx attachment facturae cbb is Printable
-
  !python {model: ir.attachment.facturae.mx}: |
    cbb_ids = self.search(cr, uid, [('invoice_id', '=', ref("account_invoice_cbb0") ), ('state', '<>', 'cancel')], limit=1)
    cbb_id = cbb_ids and cbb_ids[0] or False
    state = None
    if cbb_id:
        cbb = self.browse(cr, uid, [cbb_id])[0]
        state = cbb.state
    assert state=='printable', 'No printable state l10n_mx attachment facturae cbb'
