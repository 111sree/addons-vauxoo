<?xml version="1.0"?>{% set percep_dic = a.get_lines_amount_exemptamount_dict(a.line_ids, 'P') %}{% set deduc_dic = a.get_lines_amount_exemptamount_dict(a.line_ids, 'D') %}<nomina:Nomina xmlns:nomina="http://www.sat.gob.mx/nomina" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" Version="1.1" RegistroPatronal="{{ a.string_to_xml_format(a.company_id.employer_registration) }}" NumEmpleado="{{ employee.identification_id or 'S/N' }}" CURP="{{ a.string_to_xml_format(employee.curp and employee.curp.upper()) or 'S/N' }}" TipoRegimen="{{employee.regime_id.code and employee.regime_id.code or '2' }}" NumSeguridadSocial="{{employee.nss and employee.nss or 'S/N' }}" FechaPago="{{ time.strftime('%Y-%m-%d') or False }}" FechaInicialPago="{{ a.date_from or False }}" FechaFinalPago="{{ a.date_to or False }}" NumDiasPagados="{{a.worked_days_line_ids|sum(attribute='number_of_days')}}" Departamento="{{ a.string_to_xml_format(employee.department_id.name) }}" CLABE="{{ employee.bank_account_id.clabe and employee.bank_account_id.clabe or '000000000000000000'}}" Banco="{{ employee.bank_account_id.bank.code}}" FechaInicioRelLaboral="{{ a.contract_id.date_start or False }}" Antiguedad="{{ a.contract_id.seniority or 0 }}" Puesto="{{ a.string_to_xml_format(employee.job_id.name and a.contract_id.job_id.name) or 'N/A' }}" TipoContrato="{{ a.string_to_xml_format(a.contract_id.type_id.name) }}" TipoJornada="{{ a.string_to_xml_format(a.contract_id.working_day_id.name) or '' }}" PeriodicidadPago="{{ a.string_to_xml_format(a.contract_id.schedule_pay) or '' }}" SalarioBaseCotApor="{{ a.contract_id.wage or 0 }}" RiesgoPuesto="{{ a.contract_id.risk_rank_id.code or '1' }}" SalarioDiarioIntegrado="{{ a.contract_id.integrated_salary or 0 }}">{% if a.get_input_line_ids_type(a.line_ids, 'P') %}<nomina:Percepciones TotalGravado="{{ a.get_input_line_ids_type(a.line_ids, 'P', 'G')|sum(attribute='amount') }}" TotalExento="{{ a.get_input_line_ids_type(a.line_ids, 'P', 'E')|sum(attribute='amount') }}">{% for i in a.get_line_short_type(a.line_ids, 'P') %}{% set __check_payslip_code_mx_re = re.compile( a._structure )%}{% set code_full = __check_payslip_code_mx_re.match( i.code )%}{% if (percep_dic[code_full.group('code')]['amount'] == 0 and percep_dic[code_full.group('code')]['exempt_amount']== 0) == False %}<nomina:Percepcion TipoPercepcion="{{ a.string_to_xml_format(code_full.group('code')) }}" Clave="{{ a.string_to_xml_format(code_full.group('code') + 'clave') }}" Concepto="{{ a.string_to_xml_format(i.name) }}" ImporteGravado="{{ percep_dic[code_full.group('code')]['amount'] }}" ImporteExento="{{ percep_dic[code_full.group('code')]['exempt_amount'] }}"/>{%endif%}{% endfor %}</nomina:Percepciones>{% endif %}{% if a.get_input_line_ids_type(a.line_ids, 'D')  %}<nomina:Deducciones TotalGravado="{{ abs(a.get_input_line_ids_type(a.line_ids, 'D', 'G')|sum(attribute='amount')) }}" TotalExento="{{ abs(a.get_input_line_ids_type(a.line_ids, 'D', 'E')|sum(attribute='amount')) }}">{% for i in a.get_line_short_type(a.line_ids, 'D') %}{% set __check_payslip_code_mx_re = re.compile( a._structure )%}{% set code_full = __check_payslip_code_mx_re.match( i.code )%}{% if (deduc_dic[code_full.group('code')]['amount'] == 0 and deduc_dic[code_full.group('code')]['exempt_amount'] == 0) == False %}<nomina:Deduccion TipoDeduccion="{{ a.string_to_xml_format(code_full.group('code'))  }}" Clave="{{ a.string_to_xml_format(code_full.group('code')+ 'clave') }}" Concepto="{{ a.string_to_xml_format(i.name)  }}" ImporteGravado="{{ abs(deduc_dic[code_full.group('code')]['amount']) }}" ImporteExento="{{ abs( deduc_dic[code_full.group('code')]['exempt_amount']) }}"/>{% endif %}{% endfor %}</nomina:Deducciones>{% endif %}{% if a.inability_line_ids %}<nomina:Incapacidades>{% for i in a.inability_line_ids %}<nomina:Incapacidad DiasIncapacidad="{{ i.number_of_days or 0.0 }}" TipoIncapacidad="{{ i.inability_id.code or 1 }}" Descuento="{{ i.amount or 0 }}"/>{% endfor %}</nomina:Incapacidades>{% endif %}{% if a.overtime_line_ids %}<nomina:HorasExtras>{% for i in a.overtime_line_ids %}<nomina:HorasExtra Dias="{{ i.number_of_days or 0 }}" TipoHoras="{{ a.string_to_xml_format(i.type_hours.replace('double', 'Dobles').replace('triples', 'Triples')) }}" HorasExtra="{{ i.number_of_hours or 0 }}" ImportePagado="{{ i.amount or 0.0 }}"/>{% endfor %}</nomina:HorasExtras>{% endif %}</nomina:Nomina>
