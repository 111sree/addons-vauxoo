-
  To test the Mexican Electronic Invoice CFDI PAC SF
-
  I create cfdi_pac_sf a customer invoice
-
  !record {model: account.invoice, id: account_invoice_cfdi_pac_sf0, view: account.invoice_form}:
    payment_term: account.account_payment_term_advance
    journal_id: l10n_mx_cfdi_pac_sf_journal_0
    partner_id: l10n_mx_partner_address.res_partner_address_vauxoo_1
    reference_type: none
    name: 'Test cfdi_pac_sf Customer Invoice'
    invoice_line:
      - product_id: product.product_product_5
        quantity: 30.0
-
  I rewrite the journal field (BUG I need overwrite two times this field for done! only in test yaml)
-
  !record {model: account.invoice, id: account_invoice_cfdi_pac_sf0, view: account.invoice_form}:
    journal_id: l10n_mx_cfdi_pac_sf_journal_0
-
  I check that Journal is cfdi_pac_sf
-
  !assert {model: account.invoice, id: account_invoice_cfdi_pac_sf0}:
    - journal_id.id == ref('l10n_mx_cfdi_pac_sf_journal_0')
-
  I check that Initially customer invoice state is "Draft"
-
  !assert {model: account.invoice, id: account_invoice_cfdi_pac_sf0}:
    - state == 'draft'
-
  I open invoice by clicking on Create button
-
  !workflow {model: account.invoice, action: invoice_open, ref: account_invoice_cfdi_pac_sf0}
-
  I check that the invoice state is "Open"
-
  !assert {model: account.invoice, id: account_invoice_cfdi_pac_sf0}:
    - state == 'open'
-
  I confirm l10n_mx attachment facturae cfdi_pac_sf by clicking on confirm button
-
  !python {model: ir.attachment.facturae.mx}: |
    import netsvc
    wf_service = netsvc.LocalService("workflow")
    cfdi_pac_sf_ids = self.search(cr, uid, [('invoice_id', '=', ref("account_invoice_cfdi_pac_sf0") ), ('state', '<>', 'cancel')], limit=1)
    cfdi_pac_sf_id = cfdi_pac_sf_ids and cfdi_pac_sf_ids[0] or False
    if cfdi_pac_sf_id:
        wf_service.trg_validate(uid, 'ir.attachment.facturae.mx', cfdi_pac_sf_id, 'action_confirm', cr)
-
  I sign l10n_mx attachment facturae cfdi_pac_sf by clicking on sign button upload pac
-
  !python {model: ir.attachment.facturae.mx}: |
    import netsvc
    wf_service = netsvc.LocalService("workflow")
    cfdi_pac_sf_ids = self.search(cr, uid, [('invoice_id', '=', ref("account_invoice_cfdi_pac_sf0") ), ('state', '<>', 'cancel')], limit=1)
    cfdi_pac_sf_id = cfdi_pac_sf_ids and cfdi_pac_sf_ids[0] or False
    if cfdi_pac_sf_id:
        wf_service.trg_validate(uid, 'ir.attachment.facturae.mx', cfdi_pac_sf_id, 'action_sign', cr)
-
  I check that the state in l10n_mx attachment facturae cfdi_pac_sf is "Signed"
-
  !python {model: ir.attachment.facturae.mx}: |
    cfdi_pac_sf_ids = self.search(cr, uid, [('invoice_id', '=', ref("account_invoice_cfdi_pac_sf0") ), ('state', '<>', 'cancel')], limit=1)
    cfdi_pac_sf_id = cfdi_pac_sf_ids and cfdi_pac_sf_ids[0] or False
    state = None
    if cfdi_pac_sf_id:
        cfdi_pac_sf = self.browse(cr, uid, [cfdi_pac_sf_id])[0]
        state = cfdi_pac_sf.state
    assert state=='signed', 'No signed state l10n_mx attachment facturae cfdi_pac_sf'
-
  I generate a printable l10n_mx attachment facturae cfdi_pac_sf by clicking on printable button
-
  !python {model: ir.attachment.facturae.mx}: |
    import netsvc
    wf_service = netsvc.LocalService("workflow")
    cfdi_pac_sf_ids = self.search(cr, uid, [('invoice_id', '=', ref("account_invoice_cfdi_pac_sf0") ), ('state', '<>', 'cancel')], limit=1)
    cfdi_pac_sf_id = cfdi_pac_sf_ids and cfdi_pac_sf_ids[0] or False
    if cfdi_pac_sf_id:
        wf_service.trg_validate(uid, 'ir.attachment.facturae.mx', cfdi_pac_sf_id, 'action_printable', cr)
-
  I check that the state in l10n_mx attachment facturae cfdi_pac_sf is Printable
-
  !python {model: ir.attachment.facturae.mx}: |
    cfdi_pac_sf_ids = self.search(cr, uid, [('invoice_id', '=', ref("account_invoice_cfdi_pac_sf0") ), ('state', '<>', 'cancel')], limit=1)
    cfdi_pac_sf_id = cfdi_pac_sf_ids and cfdi_pac_sf_ids[0] or False
    state = None
    if cfdi_pac_sf_id:
        cfdi_pac_sf = self.browse(cr, uid, [cfdi_pac_sf_id])[0]
        state = cfdi_pac_sf.state
    assert state=='printable', 'No printable state l10n_mx attachment facturae cfdi_pac_sf'
-
  I added update_posted in journal
-
  !python {model: account.journal}: |
    journal_id = self.browse(cr, uid, ref('l10n_mx_cfdi_pac_sf_journal_0'))
    self.write(cr, uid, journal_id.id, {'update_posted': True})
-
  I generate a cancel l10n_mx attachment facturae cfdi_pac_sf by clicking on cancel button
-
  !python {model: ir.attachment.facturae.mx}: |
    cfdi_pac_sf_ids = self.search(cr, uid, [('invoice_id', '=', ref("account_invoice_cfdi_pac_sf0") ), ('state', '<>', 'cancel')], limit=1)
    cfdi_pac_sf_id = cfdi_pac_sf_ids and cfdi_pac_sf_ids[0] or False
    if cfdi_pac_sf_id:
        self.signal_cancel(cr, uid , cfdi_pac_sf_ids ,context=context)
        cfdi_pac_sf = self.browse(cr, uid, [cfdi_pac_sf_id])[0]
        state = cfdi_pac_sf.state
    assert state=='cancel', 'No cancel state l10n_mx attachment facturae cfdi_pac_sf'
-
  I check that customer invoice state is "cancel"
-
  !assert {model: account.invoice, id: account_invoice_cfdi_pac_sf0}:
    - state == 'cancel'
-
  I check that customer invoice move_id is None
-
  !assert {model: account.invoice, id: account_invoice_cfdi_pac_sf0}:
    - move_id.name == None
